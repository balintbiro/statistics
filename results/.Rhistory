}
summation
cdf
#define global variables
summation<<-0
cdf_values<<-c()
#define a function for getting cumulative distribution function
cumulative_distribution_function<-function(element){
summation=summation+element
append(cdf_values,summation)
}
cdf<-sapply(pdf,cumulative_distribution_function)
cdf
cdf[2000]
plot(x,cdf)
summation
#define global variables
summation<-0
cdf_values<-c()
#define a function for getting cumulative distribution function
cumulative_distribution_function<-function(element){
summation=summation+element
append(cdf_values,summation)
}
cdf<-sapply(pdf,cumulative_distribution_function)
plot(x,cdf)
summation=summation+4
append(cdf_values,summation)
#define a function for getting cumulative distribution function
cumulative_distribution_function<-function(element){
summation=summation+4
append(cdf_values,summation)
}
cdf<-sapply(pdf,cumulative_distribution_function)
plot(x,cdf)
summation
#define global variables
summation<-0
cdf_values<-c()
#define a function for getting cumulative distribution function
cumulative_distribution_function<-function(element){
summation=summation+element
append(cdf_values,summation)
}
cdf<-sapply(pdf,cumulative_distribution_function)
plot(x,cdf)
summation
cdf
cdf_values
#define global variables
summation<-0
cdf_values<-c()
#define a function for getting cumulative distribution function
cumulative_distribution_function<-function(element){
summation=summation+element
append(cdf_values,summation)
}
plot(x,cdf_values)
cdf_values
cdf_values[0]
#define global variables
summation<-0
cdf_values<-c()
#define a function for getting cumulative distribution function
cumulative_distribution_function<-function(element){
summation+element
append(cdf_values,summation)
}
cdf<-sapply(pdf,cumulative_distribution_function)
plot(x,cdf_values)
summation
#define global variables
summation<<-0
cdf_values<-c()
#define a function for getting cumulative distribution function
cumulative_distribution_function<-function(element){
summation+element
append(cdf_values,summation)
}
cdf<-sapply(pdf,cumulative_distribution_function)
plot(x,cdf_values)
summation
cdf[-1]
#create a variable and get mean and sd
x<-seq(from=1,
to=50,
length.out=2000)
x_mean<-mean(x)
x_sd<-sd(x)
#define a function for calculating normal distribution
normal_dist<-function(x,mean,sd){
prob_density<-(pi*sd)*exp(-0.5*((x-mean)/sd)**2)
return(prob_density)
}
#apply the previously defined function
pdf<-sapply(x,
normal_dist,
mean=x_mean,
sd=x_sd)
#visualize the probabilty density function
setwd('../results/')
png(file='pdf.png')
plot(x,pdf)
dev.off()
pdf
#visualize the probabilty density function
#setwd('../results/')
#png(file='pdf.png')
plot(x,pdf)
#define a function for getting cumulative distribution function
cumulative_distribution_function<-function(element){
summation+element
append(cdf_values,summation/sum(pdf))
}
cdf<-sapply(pdf,cumulative_distribution_function)
cdf
cdf_values
plot(x,cdf_values)
append(cdf_values,3)
cdf_values
append(3,cdf_values)
cdf_values
cdf_values<-c()
append(3,cdf_values)
cdf_values
#define a function for getting cumulative distribution function
cumulative_distribution_function<-function(element){
summation+element
cdf_values<-append(cdf_values,summation/sum(pdf))
}
cdf<-sapply(pdf,cumulative_distribution_function)
plot(x,cdf_values)
cdf_values
cdf_values<-c()
cdf_values
cdf_values<-append(cdf_values,2)
cdf_values
#define a function for getting cumulative distribution function
cd_function<-function(element){
summation+element
cdf_values<-append(cdf_values,summation/sum(pdf))
}
#define global variables
summation<-0
cdf_values<-c()
#define a function for getting cumulative distribution function
cd_function<-function(element){
summation+element
cdf_values<-append(cdf_values,summation/sum(pdf))
}
cdf<-sapply(pdf,cumulative_distribution_function)
cdf
cdf_values
#define global variables
summation<-0
cdf_values<-c()
#define a function for getting cumulative distribution function
cd_function<-function(element){
summation=summation+element
cdf_values<-append(cdf_values,summation/sum(pdf))
}
cdf<-sapply(pdf,cumulative_distribution_function)
plot(x,cdf_values)
cdf_values
cdf<-sapply(pdf,cd_function)
cdf
cdf[2000]
plot(x,cdf_values)
plot(x,cdf)
#define a function for getting cumulative distribution function
cd_function<-function(element){
summation=summation+element
cdf_values<-append(cdf_values,(summation/sum(pdf)))
}
cdf<-sapply(pdf,cd_function)
plot(x,cdf)
cdf_values
summation
#define global variables
summation<<-0
cdf_values<<-c()
#define a function for getting cumulative distribution function
cd_function<-function(element){
summation=summation+element
cdf_values<-append(cdf_values,(summation/sum(pdf)))
}
cdf<-sapply(pdf,cd_function)
plot(x,cdf)
cdf
cdf_values
#define a function for getting cumulative distribution function
cd_function<-function(element){
summation=summation+element
return(summation/sum(pdf))
}
cdf<-sapply(pdf,cd_function)
plot(x,cdf)
cdf
cdf_values
summation
#define a function for getting cumulative distribution function
cd_function<-function(element){
assign(summation)
summation=summation+element
return(summation/sum(pdf))
}
cdf<-sapply(pdf,cd_function)
plot(x,cdf)
#define global variables
summation<-0
#define a function for getting cumulative distribution function
cd_function<-function(element){
assign(summation)
summation=summation+element
return(summation/sum(pdf))
}
cdf<-sapply(pdf,cd_function)
#define a function for getting cumulative distribution function
cd_function<-function(element){
assign(summation,0)
summation=summation+element
return(summation/sum(pdf))
}
cdf<-sapply(pdf,cd_function)
plot(x,cdf)
summation<<-0
summation=summation+element
return(summation/sum(pdf))
#define a function for getting cumulative distribution function
cd_function<-function(element){
summation<<-0
summation=summation+element
return(summation/sum(pdf))
}
cdf<-sapply(pdf,cd_function)
plot(x,cdf)
cdf
summation
#define a function for getting cumulative distribution function
cd_function<-function(element){
summation<<-0
summation=summation+element
return(summation/sum(pdf))
}
cdf<-sapply(pdf,cd_function)
plot(x,cdf)
summation
summation<-0
cdf<-sapply(pdf,cd_function)
plot(x,cdf)
summation
cdf[2000]
pdf[2000]
#define a function for getting cumulative distribution function
cd_function<-function(element){
summation<<-0
summation=summation+element
return(summation/sum(pdf))
}
#summation<-0
cdf<-sapply(pdf,cd_function)
plot(x,cdf)
summation
#define a function for getting cumulative distribution function
cd_function<-function(element){
summation<<-0
summation=summation+element
return(summation/sum(pdf))
}
summation<<-0
cdf<-sapply(pdf,cd_function)
plot(x,cdf)
cdf
#define a function for getting cumulative distribution function
cd_function<-function(element){
summation<<-0
summation<-summation+element
return(summation/sum(pdf))
}
summation<<-0
cdf<-sapply(pdf,cd_function)
plot(x,cdf)
summation
#define a function for getting cumulative distribution function
cd_function<-function(element){
summation<<-0
summation<-summation+element
return(summation/sum(pdf))
}
#summation<<-0
cdf<-sapply(pdf,cd_function)
plot(x,cdf)
summation
cdf
return(match(pdf,element))
#define a function for getting cumulative distribution function
cd_function<-function(element){
summation<<-0
summation<-summation+element
return(match(pdf,element))
}
#summation<<-0
cdf<-sapply(pdf,cd_function)
cdf
#define a function for getting cumulative distribution function
cd_function<-function(element){
summation<<-0
summation<-summation+element
return(pdf[match(pdf,element)])
}
#summation<<-0
cdf<-sapply(pdf,cd_function)
cdf
proba<-c(1,2,3,4,5,6,7)
sum(poba[:3])
sum(c(poba[:3]))
proba<-c(1,2,3,4,5,6,7)
proba[2:4]
proba[4]
proba<-c(1,9,3,3,5,6,7)
proba[4]
proba[,4]
head(proba,-3)
return(index)
#define a function for getting cumulative distribution function
cd_function<-function(element){
summation<<-0
summation<-summation+element
index<-match(pdf,element)
return(index)
}
#summation<<-0
cdf<-sapply(pdf,cd_function)
cdf
return(index+1)
#define a function for getting cumulative distribution function
cd_function<-function(element){
summation<<-0
summation<-summation+element
index<-match(pdf,element)
return(index+1)
}
#summation<<-0
cdf<-sapply(pdf,cd_function)
cdf
return(index+10)
#define a function for getting cumulative distribution function
cd_function<-function(element){
summation<<-0
summation<-summation+element
index<-match(pdf,element)
return(index+10)
}
#summation<<-0
cdf<-sapply(pdf,cd_function)
cdf
#define a function for getting cumulative distribution function
cd_function<-function(element){
summation<<-0
summation<-summation+element
index<-match(pdf,element)
return(typeof(index))
}
#summation<<-0
cdf<-sapply(pdf,cd_function)
cdf
#define a function for getting cumulative distribution function
cd_function<-function(element){
summation<<-0
summation<-summation+element
index<-match(pdf,element)
return(index**index)
}
#summation<<-0
cdf<-sapply(pdf,cd_function)
cdf
#define a function for getting cumulative distribution function
cd_function<-function(element){
index<-match(pdf,element)
return(index,element)
}
#summation<<-0
cdf<-sapply(pdf,cd_function)
#define a function for getting cumulative distribution function
cd_function<-function(element){
index<-match(pdf,element)
return((index,element))
}
#summation<<-0
cdf<-sapply(pdf,cd_function)
#define a function for getting cumulative distribution function
cd_function<-function(element){
index<-match(pdf,element)
return(c(index,element))
}
#summation<<-0
cdf<-sapply(pdf,cd_function)
cdf
pdf
#define a function for getting cumulative distribution function
cd_function<-function(element){
index<-match(pdf,element)
return(as.integer(index))
}
#summation<<-0
cdf<-sapply(pdf,cd_function)
cdf
#define a function for getting cumulative distribution function
cd_function<-function(element){
index<-match(pdf,element)
return(as.integer(index)*10)
}
#summation<<-0
cdf<-sapply(pdf,cd_function)
cdf
plot(x,cdf)
length(x)
length(cdf)
#define a function for getting cumulative distribution function
cd_function<-function(element){
index<-match(pdf,element)
return(index)
}
#summation<<-0
cdf<-sapply(pdf,cd_function)
plot(x,cdf)
length(cdf)
#define a function for getting cumulative distribution function
cd_function<-function(element){
index<-match(pdf,element)
return(element)
}
#summation<<-0
cdf<-sapply(pdf,cd_function)
length(cdf)
#define a function for getting cumulative distribution function
cd_function<-function(element){
index<-which(pdf,element)
return(index)
}
#summation<<-0
cdf<-sapply(pdf,cd_function)
#define a function for getting cumulative distribution function
cd_function<-function(element){
index<-which(pdf==element)
return(index)
}
#summation<<-0
cdf<-sapply(pdf,cd_function)
cdf
#define a function for getting cumulative distribution function
cd_function<-function(element){
container<<-c()
container<<-append(container,element)
return(length(container))
}
#summation<<-0
cdf<-sapply(pdf,cd_function)
cdf
container<-c()
#summation<<-0
cdf<-sapply(pdf,cd_function)
container
pdf[2000]
#define a function for getting cumulative distribution function
cd_function<-function(element){
#container<<-c()
container<<-append(container,element)
return(length(container))
}
container
#define a function for getting cumulative distribution function
cd_function<-function(element){
#container<<-c()
container<<-append(container,element)
return(length(container))
}
#summation<<-0
cdf<-sapply(pdf,cd_function)
cdf
#define a function for getting cumulative distribution function
cd_function<-function(element){
container<<-append(container,element)
return(sum(container)/sum(pdf))
}
cdf<-sapply(pdf,cd_function)
cdf
sum(pdf)
#define a function for getting cumulative distribution function
cd_function<-function(element){
container<<-append(container,element)
return(sum(container)/sum(pdf))
}
cdf<-sapply(pdf,cd_function)
cdf
container<<-c()
cdf<-sapply(pdf,cd_function)
cdf
plot(x,cdf)
getwd()
#define a function for getting cumulative distribution function
cd_function<-function(element){
container<<-append(container,element)
return(sum(container)/sum(pdf))
}
#define global variable
container<<-c()
#make the function work and visualize cdf
cdf<-sapply(pdf,cd_function)
png(file='cdf.png')
plot(x,cdf)
dev.off()
